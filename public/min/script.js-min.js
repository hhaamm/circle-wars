(function(){var d=function(){var g={};g.minWalls=parseInt($("#createGameForm [name='minWalls']").val());g.maxWalls=parseInt($("#createGameForm [name='maxWalls']").val());g.weaponGeneration=parseFloat($("#createGameForm [name='weaponGeneration']").val());console.log(g);var e=$("#canvas")[0].getContext("2d");var f=new Game(e,$("#canvas").attr("width"),$("#canvas").attr("height"),g);f.init();f.onGameOver=function(){$("#gameEndMenu").show();delete f}};var c=function(){var h=io.connect(serverUrl,{transports:["websocket"]});var l={};l.minWalls=10;l.maxWalls=200;l.weaponGeneration=0.9999;l.multiplayer="client";var g=$("#canvas")[0].getContext("2d");$($("#canvas")[0]).attr("width","800px");$($("#canvas")[0]).attr("height","600px");var j=new Game(g,800,600,l);j.socket=h;var e={left:37,right:39,forward:38,backward:40,shoot:13};function f(){var o="0123456789ABCDEF".split("");var m="#";for(var n=0;n<6;n++){m+=o[Math.floor(Math.random()*16)]}return m}var i=f();var k=new Player(100,100,1,"Player 1",e,i);$(document).keydown(function(m){k.onKeyDown(m);h.emit("move player",{id:k.id,position:{x:k.getX(),y:k.getY()},direction:k.direction});return false});$(document).keyup(function(m){k.onKeyUp(m);return false});j.initClient(k);j.onGameOver=function(){j.stop();window.location.href="/over"};h.on("state",function(p){if(!p.id){throw"No id provided from server"}console.log("State");console.log(p.opts);console.log(p.players);console.log("Your session id is "+p.id);console.log("players: "+j.players.length);k.id=p.id;for(var o=0;o<p.players.length;o++){var n=new Player(p.players[o].x,p.players[o].y,0,p.players[o].name,1,p.players[o].color);n.id=p.players[o].id;if(!p.players[o].id){throw"Error: player without ID"}if(k.id!=n.id){console.log("adding player "+n.id);console.log(n.id);j.addPlayerIfNotPresent(n)}}console.log("players"+j.players.length);console.log("weapons");console.log(p.weapons);for(o=0;o<p.weapons.length;o++){var m=p.weapons[o];console.log(m.weaponTypeIndex);j.addWeapon(m.weaponTypeIndex,m.position.x,m.position.y,m.id)}console.log(p.walls);for(o=0;o<p.walls.length;o++){j.addEntity(new Wall(p.walls[o].x,p.walls[o].y,p.walls[o].material,p.walls[o].id))}console.log("Send new player: "+k.id);h.emit("new player",{x:k.getX(),y:k.getY(),name:"Player",color:k.color})});h.on("connect",function(){console.log("Connected")});h.on("disconnect",function(m){console.log(m)});h.on("new player",function(m){console.log("New player arrived");console.log(m);var n=new Player(m.x,m.y,m.direction,m.name,undefined,m.color);n.id=m.id;if(!m.id){console.log("WARNING: Receiving player without ID from server");return}if(m.id==j.player1.id){console.log("WARNING: Receiving player with same id as player1 from server");return}console.log(n);j.addPlayerIfNotPresent(n)});h.on("move player",function(n){var m=j.getPlayer(n.playerId);if(!m){console.log("WARNING: no player with ID "+n.playerId);return}m.x=n.position.x;m.y=n.position.y;m.direction=n.direction});h.on("remove player",function(m){console.log("removing player "+m.playerId);j.removePlayer(m.playerId)});h.on("new weapon",function(m){console.log("New weapon arrived from the server: "+m.x+" "+m.y);j.addWeapon(m.weaponTypeIndex,m.position.x,m.position.y,m.id)});h.on("weapon taken",function(o){console.log("Weapon taken: "+o.id);var n=j.getEntityById(o.id);j.removeEntity(n);console.log(n);var m=j.getPlayer(o.playerId);m.addWeapon(n)});h.on("new bullet",function(p){var n=new Vector(p.direction,p.outsideSuicideZone);n.originX=p.position.x;n.originY=p.position.y;console.log(p);var o=bulletTypes[p.bulletTypeIndex];var m=new o(n.x(),n.y(),p.direction,false);m.id=p.id;m.randomNumbers=p.randomNumbers;console.log(m);console.log("new bullet");j.addEntity(m,false)});h.on("entity hit",function(n){console.log("entity hit");var m=j.getEntityById(n.id);if(!m){console.log("Not existing entity with id = "+n.id);return}console.log(n);console.log(m);if(m.type=="weapon"||m.type=="bullet"){j.removeEntity(m);return}if(n.life<=0){if(m.type=="wall"){j.removeEntity(m)}if(m.type=="player"){if(m.id==j.player1.id){j.onGameOver()}else{j.removeEntity(m)}}}else{m.life=n.life}})};var b=function(){$("#newGameBtn").click(function(){a("CreateGame");return false});$("#newMultiplayerGameBtn").click(function(){a("Game");c();return false});$("#startGameBtn").click(function(){a("Game");d();return false});$("#newGame2Btn").click(function(){$("#gameEndMenu").hide();console.log("restart");a("CreateGame");return false});$("#restartGameBtn").click(function(){$("#gameEndMenu").hide();console.log("restart");a("Game");d();return false});$("#exitBtn").click(function(){$("#gameEndMenu").hide();a("Init");return false})};var a=function(e){$(".stage").hide();$("#stage"+e).show()};$(document).ready(function(){b();a("Init")})})();